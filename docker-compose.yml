version: '3.5'

services:
  db:
    image: postgres:15
    restart: always
    container_name: ${APP_NAME}-db
    environment:
      POSTGRES_USER: starsoft
      POSTGRES_PASSWORD: starsoft
      POSTGRES_DB: starsoft
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:${DB_PORT}'
    networks:
      - external-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - '9200:9200'
    networks:
      - external-net
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - external-net
  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - external-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - '8080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - external-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
    volumes:
      - .:/app
    networks:
      - external-net

volumes:
  kafka_data:

networks:
  external-net:
    external: true
